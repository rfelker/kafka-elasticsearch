group 'de.codecentric'
version '0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "se.transmode.gradle:gradle-docker:${rootProject.gradleDockerVersion}"
    }
}

eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.apache.kafka:kafka-clients:0.9.0.1')
    compile("org.slf4j:slf4j-api:${project.slf4JVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.hamcrest'
    }
    testCompile("org.assertj:assertj-core-java8:1.0.0m1")
    testCompile("de.bechte.junit:junit-hierarchicalcontextrunner:${project.hierarchicalContextRunnerVersion}")
}

jar {
    name 'producer'
    version "${version}"
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    applicationName = jar.baseName
    stageDir = file("${rootProject.projectDir}/docker/${jar.baseName}")
    dockerfile = file("${stageDir}/Dockerfile")
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}


